{"version":3,"sources":["sdk/entry.js","utils/helpers.js","pages/book.jsx","components/footer.js","components/header.js","components/layout.js","pages/index.jsx","pages/book-details.jsx","App.js","reportWebVitals.js","index.js"],"names":["Stack","require","api_key","process","delivery_token","environment","REACT_APP_CUSTOM_HOST","setHost","ApolloClient","InMemoryCache","HttpLink","from","gql","GRAPHQL_ENDPOINT","cache","client","link","uri","headers","access_token","homeDataQuery","getAllBooks","skipCount","limit","query","variables","skip","getEntryByUrl","contentTypeUid","entryUrl","referenceFieldPath","Promise","resolve","reject","blogQuery","ContentType","Query","includeReference","includeOwner","toJSON","where","find","then","result","error","getImageData","imageNode","edges","node","Book","props","amazon_link","book_author","book_cover","book_description","book_pages","book_title","pageNum","url","style","display","marginBottom","className","to","pathname","state","src","alt","width","href","Footer","footer","logo","title","navigation","map","social","social_share","icon","ReactHtmlParser","copyright","Header","header","notification_bar","show_announcement","rich_text_editor","filename","type","id","htmlFor","navigation_menu","list","Layout","children","Home","useLocation","page_num","useState","setPageNum","entry","setEntry","useQuery","API","data","all_header","items","all_book_page","total","refetch","loading","logoConnection","useEffect","length","listStyle","book_data","uid","system","bookCover","book_coverConnection","bookData","padding","margin","onClick","prevPageNum","Math","max","flexBasis","disabled","BookDetails","setBookData","errorStatus","errorCode","undefined","errorData","setError","a","flexDirection","paddingRight","App","exact","path","render","renderProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","ApolloProvider","basename","document","getElementById"],"mappings":"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","file":"static/js/main.14fb4142.chunk.js","sourcesContent":["const contentstack = require(\"contentstack\")\n\nconst Stack = contentstack.Stack({\n  api_key: process.env.REACT_APP_APIKEY,\n  delivery_token: process.env.REACT_APP_DELIVERY_TOKEN,\n  environment: process.env.REACT_APP_ENVIRONMENT,\n})\n\nif (process.env.REACT_APP_CUSTOM_HOST) {\n  Stack.setHost(process.env.REACT_APP_CUSTOM_HOST)\n}\n\n\nconst { ApolloClient, InMemoryCache, HttpLink, from, gql } =  require('@apollo/client');\n\nconst GRAPHQL_ENDPOINT =\n  `https://graphql.contentstack.com/stacks/${process.env.REACT_APP_APIKEY}?environment=${process.env.REACT_APP_ENVIRONMENT}`;\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: GRAPHQL_ENDPOINT,\n  headers: {\n    access_token: process.env.REACT_APP_DELIVERY_TOKEN,\n  },\n});\nconst client = new ApolloClient({\n  link: from([link]),\n  cache,\n});\n\nconst homeDataQuery = gql`\n  query HomeData($skip: Int, $limit: Int) {\n    all_header {\n      items {\n        navigation_menu {\n          link {\n            href\n            title\n          }\n        }\n        logoConnection {\n          edges {\n            node {\n              filename\n              url\n            }\n          }\n        }\n        notification_bar {\n          rich_text_editor\n          show_announcement\n        }\n      }\n    }\n    all_book_page(limit: $limit, skip: $skip, order_by: created_at_ASC) {\n      total\n      items {\n        book_data {\n          amazon_link {\n            href\n          }\n          book_author\n          book_description\n          book_pages\n          book_title\n          book_coverConnection {\n            edges {\n              node {\n                url\n              }\n            }\n          }\n        }\n        url\n        system {\n          uid\n        }\n      }\n    }\n  }\n`\n\nfunction getAllBooks(skipCount = 0, limit = 5) {\n  return client\n  .query({\n    query: homeDataQuery,\n    variables: {\n      skip: skipCount,\n      limit: limit\n    }\n    // query: gql`query {\n    //   all_book_page(limit: 5, skip: ${skipCount}, order_by: created_at_ASC) {\n    //     total\n    //     items {\n    //       book_data {\n    //         amazon_link {\n    //           href\n    //         }\n    //         book_author\n    //         book_description\n    //         book_pages\n    //         book_title\n    //         book_coverConnection {\n    //           edges {\n    //             node {\n    //               url\n    //             }\n    //           }\n    //         }\n    //       }\n    //       url\n    //       system {\n    //         uid\n    //       }\n    //     }\n    //   }\n    // }\n    // `\n  })\n}\n\n// function getBook(contentTypeUid) {\n//   return client\n//   .query({\n//     query: gql`query {\n//       book_page(uid: \"${contentTypeUid}\") {\n//         book_data {\n//           amazon_link {\n//             href\n//           }\n//           book_author\n//           book_coverConnection {\n//             edges {\n//               node {\n//                 url\n//               }\n//             }\n//           }\n//           book_description\n//           book_pages\n//           book_title\n//         }\n//       }\n//     }`\n//   })\n// }\n\nfunction getEntryByUrl(contentTypeUid, entryUrl, referenceFieldPath) {\n  return new Promise((resolve, reject) => {\n    const blogQuery = Stack.ContentType(contentTypeUid).Query()\n    if (referenceFieldPath) blogQuery.includeReference(referenceFieldPath)\n    blogQuery.includeOwner().toJSON()\n    const data = blogQuery.where(\"url\", `${entryUrl}`).find()\n    data.then(\n      (result) => {\n        resolve(result[0])\n      },\n      (error) => {\n        reject(error)\n      }\n    )\n  })\n}\n\nexport default {\n  // /**\n  //  *\n  //  * fetches all the entries from specific content-type\n  //  * @param {* content-type uid} contentTypeUid\n  //  * @param {* reference field name} referenceFieldPath\n  //  *\n  //  */\n  // getEntry(contentTypeUid, skipCount = 0) {\n  //   return new Promise((resolve, reject) => {\n  //     const query = Stack.ContentType(contentTypeUid).Query()\n  //     // if (referenceFieldPath) query.includeReference(referenceFieldPath)\n  //     query\n  //       .toJSON()\n  //       .includeCount()\n  //       .ascending('created_at')\n  //       .skip(skipCount)\n  //       .limit(5)\n  //       .find()\n  //       .then(\n  //         (result) => {\n  //           resolve(result)\n  //         },\n  //         (error) => {\n  //           reject(error)\n  //         }\n  //       )\n  //   })\n  // },\n\n  // /**\n  //  *fetches specific entry from a content-type\n  //  *\n  //  * @param {* content-type uid} contentTypeUid\n  //  * @param {* url for entry to be fetched} entryUrl\n  //  * @param {* reference field name} referenceFieldPath\n  //  * @returns\n  //  */\n\n  getAllBooks,\n  getEntryByUrl,\n  homeDataQuery,\n  client\n}\n","function getImageData(imageNode) {\r\n    return imageNode.edges[0].node\r\n}\r\n\r\nexport {\r\n    getImageData\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Book(props) {\r\n    const {amazon_link, book_author, book_cover, book_description, book_pages, book_title, pageNum, url} = props\r\n\r\n    return (\r\n        <div style={{ display: 'flex', marginBottom: 50 }}>            \r\n            <div className='cards'>\r\n                <Link to={{ pathname: url, state: { pageNum } }}>\r\n                    <img src={book_cover.url} alt={book_title} width={100} />\r\n                    <h3>{book_title}</h3>\r\n                </Link>\r\n                <span>Author(s): {book_author}</span>\r\n                <span style={{ marginBottom: 20 }}>{book_pages} pages</span>\r\n                <a href={amazon_link.href}>Buy this book on Amazon</a>\r\n            </div>\r\n            <p className='cards'>{book_description}</p>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport ReactHtmlParser from \"react-html-parser\"\n\nexport default function Footer(props) {\n  const { footer } = props\n  return (\n    <footer>\n      <div className=\"max-width footer-div\">\n        <div className=\"col-quarter\">\n          <Link to=\"/\">\n            {footer.logo && (\n              <img\n                src={footer.logo.url}\n                alt=\"contentstack logo\"\n                title=\"contentstack\"\n                className=\"logo footer-logo\"\n              />\n            )}\n          </Link>\n        </div>\n        <div className=\"col-half\">\n          <nav>\n            <ul className=\"nav-ul\">\n              {footer.navigation.link?.map((link) => (\n                <li key={link.title} className=\"footer-nav-li\">\n                  <Link to={link.href}>{link.title}</Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n        <div className=\"col-quarter social-link\">\n          <div className=\"social-nav\">\n            {footer.social.social_share?.map((social) => (\n              <a\n                href={social.link.href}\n                title={social.link.title}\n                key={social.link.title}\n              >\n                <img src={social.icon.url} alt=\"social icon\" />\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"copyright\">{ReactHtmlParser(footer.copyright)}</div>\n    </footer>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport ReactHtmlParser from \"react-html-parser\"\n\nexport default function Header(props) {\n  const { header } = props\n\n  return (\n    <header className=\"header\">\n      {header.notification_bar.show_announcement && (\n        <div className=\"note-div\">\n          {ReactHtmlParser(header.notification_bar.rich_text_editor)}\n        </div>\n      )}\n      <div className=\"max-width header-div\">\n        <div className=\"wrapper-logo\">\n          <Link to=\"/\" title=\"Contentstack\">\n            <img\n              className=\"logo\"\n              src={header.logo.url}\n              alt={header.logo.filename}\n            />\n          </Link>\n        </div>\n        <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\n        <label className=\"menu-icon\" htmlFor=\"menu-btn\">\n          <span className=\"navicon\" />\n        </label>\n        <nav className=\"menu\">\n          <ul className=\"nav-ul header-ul\">\n            {header.navigation_menu.link.map((list) => (\n              <li key={list.title} className=\"nav-li\">\n                <Link\n                  to={list.href}\n                  // className={props.activeTab === list.title ? \"active\" : \"\"}\n                >\n                  {list.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </div>\n    </header>\n  )\n}\n","import React from \"react\"\nimport Footer from \"./footer\"\nimport Header from \"./header\"\n\nexport default function Layout(props) {\n  const { footer, children, header } = props\n\n  return (\n    <>\n      {header ? <Header header={header} /> : null}\n      <main>{children}</main>\n      {footer ? <Footer footer={footer} /> : null}\n    </>\n  )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useLocation } from \"react-router-dom\"\nimport { Redirect } from \"react-router\";\n\nimport API from \"../sdk/entry\";\nimport { getImageData } from \"../utils/helpers\";\n\nimport Book from \"./book\";\nimport Layout from \"../components/layout\";\n\nfunction Home() {\n  const bookLimit = 5\n  // const { history, location: { state: { pageNum: page_num = 1 } = {} } } = props\n  const { state: { pageNum: page_num = 1 } = {} } = useLocation()\n\n  const [pageNum, setPageNum] = useState(page_num)\n  const [entry, setEntry] = useState([])\n  // const [error, setError] = useState({ errorStatus: false, errorCode: undefined, errorData: undefined })\n\n  const { data: { all_header: { items: [header] = [{}] } = {}, all_book_page: { items = [], total = 0 } = {} } = {}, refetch, loading, error } = useQuery(API.homeDataQuery, {\n    variables: {\n      limit: bookLimit,\n      skip: (pageNum - 1) * bookLimit\n    }\n  })\n\n  const logo = header.logoConnection ? getImageData(header.logoConnection) : {}\n\n  useEffect(() => {\n    if(items.length) {\n      setEntry(items)\n    }\n  }, [items])\n\n  // useEffect(async () => {\n    // try {\n    //   const [books, bookCount] = await Stack.getEntry(\n    //     \"book_page\"\n    //   );\n\n    //   setEntry(books)\n    //   setEntryCount(bookCount)\n    //   setError(prevState => ({...prevState, errorStatus: false }))\n\n    // } catch (error) {\n    //   setError({ errorStatus: true, errorCode: 404, errorData: error })\n    // }\n\n  //   try {\n  //     const { data: { all_book_page: { items, total } } } = await API.getAllBooks((pageNum - 1) * bookLimit)\n\n  //     setEntry(items)\n  //     setEntryCount(Number(total))\n  //   } catch (error) {\n  //       setError({ errorStatus: true, errorCode: 404, errorData: error })\n  //     }\n  // }, [pageNum])\n\n  function incrementHandler() {\n    // try {\n    //   const { data: { all_book_page: { items } } } = await API.getAllBooks(pageNum * bookLimit)\n\n    //   setPageNum(pageNum + 1)\n    //   setEntry(items)\n    //   setError(prevState => ({...prevState, errorStatus: false }))\n    //   } catch (error) {\n    //     setError({ errorStatus: true, errorCode: 404, errorData: error })\n    //   }\n    setPageNum(pageNum + 1)\n    refetch({\n      skip: pageNum * bookLimit\n    })\n  }\n\n  function decrementHandler() {\n    const prevPageNum = Math.max(1, pageNum - 1)\n\n    // try {\n    //   const { data: { all_book_page: { items } } } = await API.getAllBooks((prevPageNum - 1) * bookLimit)\n\n    //   setPageNum(prevPageNum)\n    //   setEntry(items)\n    //   setError(prevState => ({...prevState, errorStatus: false }))\n    //   } catch (error) {\n    //     setError({ errorStatus: true, errorCode: 404, errorData: error })\n    //   }\n\n    // setPageNum(prevPageNum)\n    // refetch({\n    //   skip: (prevPageNum - 1) * bookLimit\n    // })\n\n    // console.log(previousData);\n    // const { all_book_page: { items } } = previousData\n\n    // setEntry(items)\n\n\n    setPageNum(prevPageNum)\n    refetch({\n      skip: (prevPageNum - 1) * bookLimit\n    })\n  }\n\n  if(loading) {\n    return (\n      <div>Loading...</div>\n    )\n  }\n\n  if (error) {\n    return <Redirect to={'/error'} />\n  }\n\n  return (\n    <Layout header={{...header, logo}}>\n      <ul style={{ listStyle: 'none' }}>\n        {entry?.map(({ book_data, url, system: { uid } }) => {\n          const bookCover = getImageData(book_data.book_coverConnection)\n\n          const bookData = {...book_data, uid, pageNum, book_cover: bookCover}\n\n          return (\n            <li key={book_data.book_title}>\n              <Book {...bookData} url={url} />\n            </li>\n          )\n        })}\n      </ul>\n      <div style={{ width: 300, padding: 50, margin: \"0 auto\", display: 'flex' }}>\n        <button onClick={decrementHandler} style={{ flexBasis: '50%' }} disabled={pageNum === 1}>Previous</button>\n        <button \n          onClick={incrementHandler} \n          style={{ flexBasis: '50%' }} \n          disabled={total - (pageNum * bookLimit) <= 0}\n        >\n          Next\n        </button>\n      </div>\n    </Layout>\n  );\n}\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\"\r\n\r\nimport API from \"../sdk/entry\";\r\n\r\nexport default function BookDetails() {\r\n    const { pathname, state: { pageNum } = {} } = useLocation()\r\n\r\n    const [bookData, setBookData] = useState()\r\n    const [error, setError] = useState({ errorStatus: false, errorCode: undefined, errorData: undefined })\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const [{ book_data }] = await API.getEntryByUrl('book_page', pathname)\r\n\r\n            setBookData(book_data)\r\n        } catch (error) {\r\n            setError({ errorStatus: true, errorCode: 404, errorData: error })\r\n        }\r\n    }, [])\r\n\r\n    if (error.errorStatus) {\r\n        return <div>Something went wrong</div>\r\n    }\r\n\r\n    if (!bookData) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    const { amazon_link, book_author, book_cover, book_description, book_pages, book_title } = bookData\r\n\r\n    return (\r\n        <>\r\n            <div className=\"btn-wrapper\">\r\n                <Link to={{ pathname: \"/\", state: { pageNum } }} className=\"btn primary-btn\">Back</Link>\r\n            </div>\r\n            <div style={{ margin: \"0 auto\", width: \"80%\", display: \"flex\", flexDirection: \"column\" }}>\r\n                <h1>{book_title}</h1>         \r\n                <div style={{ display: \"flex\" }}>\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", paddingRight: 50 }}>\r\n                        <img src={book_cover.url} alt={book_title} width={250} />\r\n                        <span>Author(s): {book_author}</span>\r\n                        <span>{book_pages} pages</span>\r\n                    </div>\r\n                    <div style={{ flexBasis: \"30%\" }}>\r\n                        <p>{book_description}</p>\r\n                        <a href={amazon_link.href}>Buy this book on Amazon</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport Home from \"./pages/index.jsx\"\nimport BookDetails from \"./pages/book-details.jsx\"\n// import Book from \"./components/book-info\";\n// import Blog from \"./pages/blog\"\n// import BlogPost from \"./pages/blog-post.jsx\"\n// import ContactUS from \"./pages/contact-us\"\n// import AboutUs from \"./pages/about-us\"\n// import Error from \"./pages/error.jsx\"\nimport \"./styles/third-party.css\"\nimport \"./styles/style.css\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(renderProps) => <Home {...renderProps} />}\n        />\n        <Route\n          exact\n          path=\"/:id\"\n          render={(renderProps) => <BookDetails {...renderProps} />}\n        />\n        {/* <Route\n          exact\n          path=\"/blog\"\n          render={(renderProps) => <Blog {...renderProps} />}\n        />\n\n        <Route\n          path=\"/blog/:uid\"\n          render={(renderProps) => <BlogPost {...renderProps} />}\n        />\n        <Route\n          exact\n          path=\"/about-us\"\n          render={(renderProps) => <AboutUs {...renderProps} />}\n        />\n        <Route\n          exact\n          path=\"/contact-us\"\n          render={(renderProps) => <ContactUS {...renderProps} />}\n        />\n        <Route path=\"*\" render={(renderProps) => <Error {...renderProps} />} /> */}\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { ApolloProvider } from \"@apollo/client\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { HashRouter } from \"react-router-dom\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport API from \"./sdk/entry\"\n\nReactDOM.render(\n  <ApolloProvider client={API.client}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}